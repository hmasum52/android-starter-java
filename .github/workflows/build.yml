name: push on master

on:
  push:
    branches: [ release ]


jobs:
  release_build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup JAVA 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17
      - name: copy the local properties file
        run: echo ${{ secrets.LOCAL_PROPERTIES }} | base64 --decode > local.properties


      - name: copy google service json to the appropriate path
        run: |          # check if secrets.GOOGLE_SERVICES_JSON exists first then echo
          if [ -n "${{ secrets.GOOGLE_SERVICES_JSON }}" ]; then
            echo ${{ secrets.GOOGLE_SERVICES_JSON }} | base64 --decode > app/google-services.json
          else
            echo "GOOGLE_SERVICES_JSON not found"
          fi

      - name: grant permission
        run: chmod +x gradlew
      - name: print present working directory
        run: pwd

      - name: Cache Gradle and wrapper
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}

      #1
      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.SIGNING_KEY_STORE_BASE64 }}
        run: |
          echo $ENCODED_STRING > keystore-b64.txt
          base64 -d keystore-b64.txt > keystore.jks
          rm keystore-b64.txt

      - name: ls dir
        run: ls

      #2
      - name: Build Release apk
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        run: ./gradlew assembleRelease

        #3
      - name: Build Release bundle
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        run: ./gradlew bundleRelease
      #4
      - name: Upload Release Build to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-artifacts
          path: |
            app/build/outputs/apk/release/
            app/build/outputs/bundle/release/